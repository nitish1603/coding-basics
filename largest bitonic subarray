#include<bits/stdc++.h>
using namespace std;



	int longestBitonicSubarray(int *input, int n) {
		
     	int inc [n];
        int dec [n];
        inc [0]=1;
        dec[n-1]= 1;
        for(int i=1;i<n;i++){
            inc[i]=1;
            for(int j=i-1;j>=0;j--){
                if(input[j]>=input[i]){
                    continue;
                }
                int possibleAns= inc[j]+1;
                if(possibleAns > inc[i]){
                    inc[i]=possibleAns;
                }
            }
        }

        
    for(int i=n-2;i>=0;i--){
            dec[i]=1;
            for(int j=i+1;j<n;j++){
                if(input[j]>=input[i]){
                    continue;
                }
                int possibleAns= dec[j]+1;
                if(possibleAns > dec[i]){
                    dec[i]=possibleAns;
                }
            }
    }  
    
  
    int ans=0;
    for(int i=0;i<n;i++){
        int temp=inc[i]+dec[i];
        if(temp>ans){
            ans=temp;
        }
        
    }
    return ans-1;

 	}



int main() {
  int n, input[100000];
  cin>>n;
  for(int i=0; i<n; i++) {
    cin>>input[i];
  }
  cout<<longestBitonicSubarray(input, n);
  return 0;
}
